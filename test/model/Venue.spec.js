/**
 * Musement API
 * Musmement API
 *
 * OpenAPI spec version: 3.2.0
 * Contact: api-support@musement.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MusementApi);
  }
}(this, function(expect, MusementApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MusementApi.Venue();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Venue', function() {
    it('should create an instance of Venue', function() {
      // uncomment below and update the code to test Venue
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be.a(MusementApi.Venue);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property headline (base name: "headline")', function() {
      // uncomment below and update the code to test the property headline
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property latitude (base name: "latitude")', function() {
      // uncomment below and update the code to test the property latitude
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property longitude (base name: "longitude")', function() {
      // uncomment below and update the code to test the property longitude
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property relevance (base name: "relevance")', function() {
      // uncomment below and update the code to test the property relevance
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property descriptionHtml (base name: "description_html")', function() {
      // uncomment below and update the code to test the property descriptionHtml
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property events (base name: "events")', function() {
      // uncomment below and update the code to test the property events
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property verticals (base name: "verticals")', function() {
      // uncomment below and update the code to test the property verticals
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property coverImageUrl (base name: "cover_image_url")', function() {
      // uncomment below and update the code to test the property coverImageUrl
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property eventsCount (base name: "events_count")', function() {
      // uncomment below and update the code to test the property eventsCount
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property showCalendar (base name: "show_calendar")', function() {
      // uncomment below and update the code to test the property showCalendar
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property showFlavoursFilter (base name: "show_flavours_filter")', function() {
      // uncomment below and update the code to test the property showFlavoursFilter
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property showFiltersWhenEventsCount (base name: "show_filters_when_events_count")', function() {
      // uncomment below and update the code to test the property showFiltersWhenEventsCount
      //var instane = new MusementApi.Venue();
      //expect(instance).to.be();
    });

  });

}));
