/**
 * Musement API
 * Musmement API
 *
 * OpenAPI spec version: 3.2.0
 * Contact: api-support@musement.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MusementApi);
  }
}(this, function(expect, MusementApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MusementApi.GiftCreationRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GiftCreationRequest', function() {
    it('should create an instance of GiftCreationRequest', function() {
      // uncomment below and update the code to test GiftCreationRequest
      //var instane = new MusementApi.GiftCreationRequest();
      //expect(instance).to.be.a(MusementApi.GiftCreationRequest);
    });

    it('should have the property eventId (base name: "event_id")', function() {
      // uncomment below and update the code to test the property eventId
      //var instane = new MusementApi.GiftCreationRequest();
      //expect(instance).to.be();
    });

    it('should have the property donorName (base name: "donor_name")', function() {
      // uncomment below and update the code to test the property donorName
      //var instane = new MusementApi.GiftCreationRequest();
      //expect(instance).to.be();
    });

    it('should have the property message (base name: "message")', function() {
      // uncomment below and update the code to test the property message
      //var instane = new MusementApi.GiftCreationRequest();
      //expect(instance).to.be();
    });

    it('should have the property pictureUrl (base name: "picture_url")', function() {
      // uncomment below and update the code to test the property pictureUrl
      //var instane = new MusementApi.GiftCreationRequest();
      //expect(instance).to.be();
    });

    it('should have the property print (base name: "print")', function() {
      // uncomment below and update the code to test the property print
      //var instane = new MusementApi.GiftCreationRequest();
      //expect(instance).to.be();
    });

    it('should have the property recipientEmail (base name: "recipient_email")', function() {
      // uncomment below and update the code to test the property recipientEmail
      //var instane = new MusementApi.GiftCreationRequest();
      //expect(instance).to.be();
    });

    it('should have the property recipientName (base name: "recipient_name")', function() {
      // uncomment below and update the code to test the property recipientName
      //var instane = new MusementApi.GiftCreationRequest();
      //expect(instance).to.be();
    });

    it('should have the property featureCode (base name: "feature_code")', function() {
      // uncomment below and update the code to test the property featureCode
      //var instane = new MusementApi.GiftCreationRequest();
      //expect(instance).to.be();
    });

    it('should have the property productsWithQuantities (base name: "products_with_quantities")', function() {
      // uncomment below and update the code to test the property productsWithQuantities
      //var instane = new MusementApi.GiftCreationRequest();
      //expect(instance).to.be();
    });

  });

}));
