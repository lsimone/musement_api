/**
 * Musement API
 * Musmement API
 *
 * OpenAPI spec version: 3.2.0
 * Contact: api-support@musement.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MusementApi);
  }
}(this, function(expect, MusementApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MusementApi.EventApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EventApi', function() {
    describe('activitiesActivityUuidContentsLocaleCodeGet', function() {
      it('should call activitiesActivityUuidContentsLocaleCodeGet successfully', function(done) {
        //uncomment below and update the code to test activitiesActivityUuidContentsLocaleCodeGet
        //instance.activitiesActivityUuidContentsLocaleCodeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('categoriesCategoryIdEventsGet', function() {
      it('should call categoriesCategoryIdEventsGet successfully', function(done) {
        //uncomment below and update the code to test categoriesCategoryIdEventsGet
        //instance.categoriesCategoryIdEventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('citiesCityIdEventsGet', function() {
      it('should call citiesCityIdEventsGet successfully', function(done) {
        //uncomment below and update the code to test citiesCityIdEventsGet
        //instance.citiesCityIdEventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('citiesCityIdEventsHappeningGet', function() {
      it('should call citiesCityIdEventsHappeningGet successfully', function(done) {
        //uncomment below and update the code to test citiesCityIdEventsHappeningGet
        //instance.citiesCityIdEventsHappeningGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editorialCategoriesEditorialcategoryIdEventsGet', function() {
      it('should call editorialCategoriesEditorialcategoryIdEventsGet successfully', function(done) {
        //uncomment below and update the code to test editorialCategoriesEditorialcategoryIdEventsGet
        //instance.editorialCategoriesEditorialcategoryIdEventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsEventIdBundlesGet', function() {
      it('should call eventsEventIdBundlesGet successfully', function(done) {
        //uncomment below and update the code to test eventsEventIdBundlesGet
        //instance.eventsEventIdBundlesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsEventIdCommentsGet', function() {
      it('should call eventsEventIdCommentsGet successfully', function(done) {
        //uncomment below and update the code to test eventsEventIdCommentsGet
        //instance.eventsEventIdCommentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsEventIdContactFormGet', function() {
      it('should call eventsEventIdContactFormGet successfully', function(done) {
        //uncomment below and update the code to test eventsEventIdContactFormGet
        //instance.eventsEventIdContactFormGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsEventIdContactRequestsPost', function() {
      it('should call eventsEventIdContactRequestsPost successfully', function(done) {
        //uncomment below and update the code to test eventsEventIdContactRequestsPost
        //instance.eventsEventIdContactRequestsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsEventIdDatesGet', function() {
      it('should call eventsEventIdDatesGet successfully', function(done) {
        //uncomment below and update the code to test eventsEventIdDatesGet
        //instance.eventsEventIdDatesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsEventIdGet', function() {
      it('should call eventsEventIdGet successfully', function(done) {
        //uncomment below and update the code to test eventsEventIdGet
        //instance.eventsEventIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsEventIdGiftScheduleGet', function() {
      it('should call eventsEventIdGiftScheduleGet successfully', function(done) {
        //uncomment below and update the code to test eventsEventIdGiftScheduleGet
        //instance.eventsEventIdGiftScheduleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsEventIdMediaGet', function() {
      it('should call eventsEventIdMediaGet successfully', function(done) {
        //uncomment below and update the code to test eventsEventIdMediaGet
        //instance.eventsEventIdMediaGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsEventIdScheduleDayGet', function() {
      it('should call eventsEventIdScheduleDayGet successfully', function(done) {
        //uncomment below and update the code to test eventsEventIdScheduleDayGet
        //instance.eventsEventIdScheduleDayGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsEventIdScheduleDayGiftCodeGet', function() {
      it('should call eventsEventIdScheduleDayGiftCodeGet successfully', function(done) {
        //uncomment below and update the code to test eventsEventIdScheduleDayGiftCodeGet
        //instance.eventsEventIdScheduleDayGiftCodeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsGet', function() {
      it('should call eventsGet successfully', function(done) {
        //uncomment below and update the code to test eventsGet
        //instance.eventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventsSearchExtendedGet', function() {
      it('should call eventsSearchExtendedGet successfully', function(done) {
        //uncomment below and update the code to test eventsSearchExtendedGet
        //instance.eventsSearchExtendedGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('feedbackRequestsFeedbackRequestNonceGet', function() {
      it('should call feedbackRequestsFeedbackRequestNonceGet successfully', function(done) {
        //uncomment below and update the code to test feedbackRequestsFeedbackRequestNonceGet
        //instance.feedbackRequestsFeedbackRequestNonceGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('venuesVenueIdEventsGet', function() {
      it('should call venuesVenueIdEventsGet successfully', function(done) {
        //uncomment below and update the code to test venuesVenueIdEventsGet
        //instance.venuesVenueIdEventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
