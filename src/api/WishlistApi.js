/**
 * Musement API
 * Musmement API
 *
 * OpenAPI spec version: 3.2.0
 * Contact: api-support@musement.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Wish'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Wish'));
  } else {
    // Browser globals (root is window)
    if (!root.MusementApi) {
      root.MusementApi = {};
    }
    root.MusementApi.WishlistApi = factory(root.MusementApi.ApiClient, root.MusementApi.Wish);
  }
}(this, function(ApiClient, Wish) {
  'use strict';

  /**
   * Wishlist service.
   * @module api/WishlistApi
   * @version 3.2.0
   */

  /**
   * Constructs a new WishlistApi. 
   * @alias module:api/WishlistApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the customersMeWishesIdDelete operation.
     * @callback module:api/WishlistApi~customersMeWishesIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an item from user wishlist
     * @param {Number} id 
     * @param {module:api/WishlistApi~customersMeWishesIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.customersMeWishesIdDelete = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id == undefined || id == null) {
        throw new Error("Missing the required parameter 'id' when calling customersMeWishesIdDelete");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/xml', 'application/json'];
      var accepts = ['application/xml', 'application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/customers/me/wishes/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the wishesCodeGet operation.
     * @callback module:api/WishlistApi~wishesCodeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Wish} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a wish
     * @param {String} code Wish identifier in the form &#39;[wish-id]-[wishtype]&#39;
     * @param {module:api/WishlistApi~wishesCodeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Wish}
     */
    this.wishesCodeGet = function(code, callback) {
      var postBody = null;

      // verify the required parameter 'code' is set
      if (code == undefined || code == null) {
        throw new Error("Missing the required parameter 'code' when calling wishesCodeGet");
      }


      var pathParams = {
        'code': code
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/xml', 'application/json'];
      var accepts = ['application/xml', 'application/json'];
      var returnType = Wish;

      return this.apiClient.callApi(
        '/wishes/{code}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
