/**
 * Musement API
 * Musmement API
 *
 * OpenAPI spec version: 3.2.0
 * Contact: api-support@musement.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Activity', 'model/ActivityContent', 'model/ActivityPoi', 'model/ActivityTaxonomy', 'model/Background', 'model/Barcode', 'model/Blogger', 'model/Blogpost', 'model/BlogpostBlock', 'model/BlogpostBlockEmbeddedHtml', 'model/BlogpostBlockImage', 'model/BlogpostBlockText', 'model/BlogpostCategory', 'model/BlogpostCategoryAggregated', 'model/BraintreePaymentRequest', 'model/Bucket', 'model/Bundle', 'model/Cart', 'model/CartRequest', 'model/Category', 'model/CategoryAggregated', 'model/City', 'model/CityAggregated', 'model/CityRequest', 'model/Comment', 'model/ContentLanguage', 'model/ContentManager', 'model/Country', 'model/CountryRequest', 'model/Currency', 'model/Customer', 'model/CustomerRequest', 'model/Deeplink', 'model/Destination', 'model/DestinationComment', 'model/DestinationCommentAuthor', 'model/DestinationPhoto', 'model/EditorialCategory', 'model/Event', 'model/ExtendedField', 'model/FeedbackRequest', 'model/Flavour', 'model/FormError', 'model/FormFieldError', 'model/GalleryMedia', 'model/GenericEvent', 'model/GiftCard', 'model/GiftCreationProductWithQuantity', 'model/GiftCreationRequest', 'model/GiftRedeemRequest', 'model/GiftSchedule', 'model/GiftScheduleFeature', 'model/GiftScheduleProduct', 'model/ListType', 'model/ModelDate', 'model/MusementList', 'model/MusementListGenericItem', 'model/MusementListMusementItem', 'model/MusementListThirdpartyItem', 'model/Order', 'model/Page', 'model/PassengerInfo', 'model/PassengerInfoRequest', 'model/PaypalPaymentRequest', 'model/PostClientToken', 'model/Price', 'model/Pricetag', 'model/Product', 'model/ProductRequest', 'model/PromoCode', 'model/PurchaseExperience', 'model/RedirectTo3dSecureCardIssuer', 'model/ResponseWithMessage', 'model/Review', 'model/Schedule', 'model/ScheduleGroup', 'model/ScheduleProduct', 'model/ScheduleSlot', 'model/SearchResponse', 'model/SeatPrice', 'model/StripePaymentRequest', 'model/SuccessfulPayment', 'model/Supplier', 'model/Tag', 'model/Ticket', 'model/TicketMetadata', 'model/TicketMetadataRequest', 'model/TicketRequest', 'model/TranslatedMetadata', 'model/Venue', 'model/Vertical', 'model/VerticalAggregated', 'model/Wish', 'api/APIProxyApi', 'api/ActivityApi', 'api/ActivityTaxonomyApi', 'api/AutosuggestApi', 'api/BackgroundApi', 'api/BlogpostApi', 'api/BraintreeApi', 'api/BundleApi', 'api/CartApi', 'api/CartBundleApi', 'api/CategoryApi', 'api/CityApi', 'api/CityVenueApi', 'api/CommentApi', 'api/CountryApi', 'api/CurrenciesApi', 'api/DateApi', 'api/DeeplinkApi', 'api/DeprecatedApi', 'api/DestinationApi', 'api/EditorialCategoriesApi', 'api/EditorialCategoryApi', 'api/EventApi', 'api/EventsApi', 'api/FeaturesMetadataApi', 'api/LanguageApi', 'api/ListApi', 'api/MediaApi', 'api/OrderApi', 'api/POITypesApi', 'api/PageApi', 'api/PaymentApi', 'api/PaypalApi', 'api/PricetagApi', 'api/PurchaseExperienceApi', 'api/ReviewApi', 'api/SearchApi', 'api/SecurityApi', 'api/ServicesMetadataApi', 'api/StripeApi', 'api/VenueApi', 'api/VerticalApi', 'api/WishlistApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Activity'), require('./model/ActivityContent'), require('./model/ActivityPoi'), require('./model/ActivityTaxonomy'), require('./model/Background'), require('./model/Barcode'), require('./model/Blogger'), require('./model/Blogpost'), require('./model/BlogpostBlock'), require('./model/BlogpostBlockEmbeddedHtml'), require('./model/BlogpostBlockImage'), require('./model/BlogpostBlockText'), require('./model/BlogpostCategory'), require('./model/BlogpostCategoryAggregated'), require('./model/BraintreePaymentRequest'), require('./model/Bucket'), require('./model/Bundle'), require('./model/Cart'), require('./model/CartRequest'), require('./model/Category'), require('./model/CategoryAggregated'), require('./model/City'), require('./model/CityAggregated'), require('./model/CityRequest'), require('./model/Comment'), require('./model/ContentLanguage'), require('./model/ContentManager'), require('./model/Country'), require('./model/CountryRequest'), require('./model/Currency'), require('./model/Customer'), require('./model/CustomerRequest'), require('./model/Deeplink'), require('./model/Destination'), require('./model/DestinationComment'), require('./model/DestinationCommentAuthor'), require('./model/DestinationPhoto'), require('./model/EditorialCategory'), require('./model/Event'), require('./model/ExtendedField'), require('./model/FeedbackRequest'), require('./model/Flavour'), require('./model/FormError'), require('./model/FormFieldError'), require('./model/GalleryMedia'), require('./model/GenericEvent'), require('./model/GiftCard'), require('./model/GiftCreationProductWithQuantity'), require('./model/GiftCreationRequest'), require('./model/GiftRedeemRequest'), require('./model/GiftSchedule'), require('./model/GiftScheduleFeature'), require('./model/GiftScheduleProduct'), require('./model/ListType'), require('./model/ModelDate'), require('./model/MusementList'), require('./model/MusementListGenericItem'), require('./model/MusementListMusementItem'), require('./model/MusementListThirdpartyItem'), require('./model/Order'), require('./model/Page'), require('./model/PassengerInfo'), require('./model/PassengerInfoRequest'), require('./model/PaypalPaymentRequest'), require('./model/PostClientToken'), require('./model/Price'), require('./model/Pricetag'), require('./model/Product'), require('./model/ProductRequest'), require('./model/PromoCode'), require('./model/PurchaseExperience'), require('./model/RedirectTo3dSecureCardIssuer'), require('./model/ResponseWithMessage'), require('./model/Review'), require('./model/Schedule'), require('./model/ScheduleGroup'), require('./model/ScheduleProduct'), require('./model/ScheduleSlot'), require('./model/SearchResponse'), require('./model/SeatPrice'), require('./model/StripePaymentRequest'), require('./model/SuccessfulPayment'), require('./model/Supplier'), require('./model/Tag'), require('./model/Ticket'), require('./model/TicketMetadata'), require('./model/TicketMetadataRequest'), require('./model/TicketRequest'), require('./model/TranslatedMetadata'), require('./model/Venue'), require('./model/Vertical'), require('./model/VerticalAggregated'), require('./model/Wish'), require('./api/APIProxyApi'), require('./api/ActivityApi'), require('./api/ActivityTaxonomyApi'), require('./api/AutosuggestApi'), require('./api/BackgroundApi'), require('./api/BlogpostApi'), require('./api/BraintreeApi'), require('./api/BundleApi'), require('./api/CartApi'), require('./api/CartBundleApi'), require('./api/CategoryApi'), require('./api/CityApi'), require('./api/CityVenueApi'), require('./api/CommentApi'), require('./api/CountryApi'), require('./api/CurrenciesApi'), require('./api/DateApi'), require('./api/DeeplinkApi'), require('./api/DeprecatedApi'), require('./api/DestinationApi'), require('./api/EditorialCategoriesApi'), require('./api/EditorialCategoryApi'), require('./api/EventApi'), require('./api/EventsApi'), require('./api/FeaturesMetadataApi'), require('./api/LanguageApi'), require('./api/ListApi'), require('./api/MediaApi'), require('./api/OrderApi'), require('./api/POITypesApi'), require('./api/PageApi'), require('./api/PaymentApi'), require('./api/PaypalApi'), require('./api/PricetagApi'), require('./api/PurchaseExperienceApi'), require('./api/ReviewApi'), require('./api/SearchApi'), require('./api/SecurityApi'), require('./api/ServicesMetadataApi'), require('./api/StripeApi'), require('./api/VenueApi'), require('./api/VerticalApi'), require('./api/WishlistApi'));
  }
}(function(ApiClient, Activity, ActivityContent, ActivityPoi, ActivityTaxonomy, Background, Barcode, Blogger, Blogpost, BlogpostBlock, BlogpostBlockEmbeddedHtml, BlogpostBlockImage, BlogpostBlockText, BlogpostCategory, BlogpostCategoryAggregated, BraintreePaymentRequest, Bucket, Bundle, Cart, CartRequest, Category, CategoryAggregated, City, CityAggregated, CityRequest, Comment, ContentLanguage, ContentManager, Country, CountryRequest, Currency, Customer, CustomerRequest, Deeplink, Destination, DestinationComment, DestinationCommentAuthor, DestinationPhoto, EditorialCategory, Event, ExtendedField, FeedbackRequest, Flavour, FormError, FormFieldError, GalleryMedia, GenericEvent, GiftCard, GiftCreationProductWithQuantity, GiftCreationRequest, GiftRedeemRequest, GiftSchedule, GiftScheduleFeature, GiftScheduleProduct, ListType, ModelDate, MusementList, MusementListGenericItem, MusementListMusementItem, MusementListThirdpartyItem, Order, Page, PassengerInfo, PassengerInfoRequest, PaypalPaymentRequest, PostClientToken, Price, Pricetag, Product, ProductRequest, PromoCode, PurchaseExperience, RedirectTo3dSecureCardIssuer, ResponseWithMessage, Review, Schedule, ScheduleGroup, ScheduleProduct, ScheduleSlot, SearchResponse, SeatPrice, StripePaymentRequest, SuccessfulPayment, Supplier, Tag, Ticket, TicketMetadata, TicketMetadataRequest, TicketRequest, TranslatedMetadata, Venue, Vertical, VerticalAggregated, Wish, APIProxyApi, ActivityApi, ActivityTaxonomyApi, AutosuggestApi, BackgroundApi, BlogpostApi, BraintreeApi, BundleApi, CartApi, CartBundleApi, CategoryApi, CityApi, CityVenueApi, CommentApi, CountryApi, CurrenciesApi, DateApi, DeeplinkApi, DeprecatedApi, DestinationApi, EditorialCategoriesApi, EditorialCategoryApi, EventApi, EventsApi, FeaturesMetadataApi, LanguageApi, ListApi, MediaApi, OrderApi, POITypesApi, PageApi, PaymentApi, PaypalApi, PricetagApi, PurchaseExperienceApi, ReviewApi, SearchApi, SecurityApi, ServicesMetadataApi, StripeApi, VenueApi, VerticalApi, WishlistApi) {
  'use strict';

  /**
   * Musmement_API.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var MusementApi = require('index'); // See note below*.
   * var xxxSvc = new MusementApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new MusementApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new MusementApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new MusementApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 3.2.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Activity model constructor.
     * @property {module:model/Activity}
     */
    Activity: Activity,
    /**
     * The ActivityContent model constructor.
     * @property {module:model/ActivityContent}
     */
    ActivityContent: ActivityContent,
    /**
     * The ActivityPoi model constructor.
     * @property {module:model/ActivityPoi}
     */
    ActivityPoi: ActivityPoi,
    /**
     * The ActivityTaxonomy model constructor.
     * @property {module:model/ActivityTaxonomy}
     */
    ActivityTaxonomy: ActivityTaxonomy,
    /**
     * The Background model constructor.
     * @property {module:model/Background}
     */
    Background: Background,
    /**
     * The Barcode model constructor.
     * @property {module:model/Barcode}
     */
    Barcode: Barcode,
    /**
     * The Blogger model constructor.
     * @property {module:model/Blogger}
     */
    Blogger: Blogger,
    /**
     * The Blogpost model constructor.
     * @property {module:model/Blogpost}
     */
    Blogpost: Blogpost,
    /**
     * The BlogpostBlock model constructor.
     * @property {module:model/BlogpostBlock}
     */
    BlogpostBlock: BlogpostBlock,
    /**
     * The BlogpostBlockEmbeddedHtml model constructor.
     * @property {module:model/BlogpostBlockEmbeddedHtml}
     */
    BlogpostBlockEmbeddedHtml: BlogpostBlockEmbeddedHtml,
    /**
     * The BlogpostBlockImage model constructor.
     * @property {module:model/BlogpostBlockImage}
     */
    BlogpostBlockImage: BlogpostBlockImage,
    /**
     * The BlogpostBlockText model constructor.
     * @property {module:model/BlogpostBlockText}
     */
    BlogpostBlockText: BlogpostBlockText,
    /**
     * The BlogpostCategory model constructor.
     * @property {module:model/BlogpostCategory}
     */
    BlogpostCategory: BlogpostCategory,
    /**
     * The BlogpostCategoryAggregated model constructor.
     * @property {module:model/BlogpostCategoryAggregated}
     */
    BlogpostCategoryAggregated: BlogpostCategoryAggregated,
    /**
     * The BraintreePaymentRequest model constructor.
     * @property {module:model/BraintreePaymentRequest}
     */
    BraintreePaymentRequest: BraintreePaymentRequest,
    /**
     * The Bucket model constructor.
     * @property {module:model/Bucket}
     */
    Bucket: Bucket,
    /**
     * The Bundle model constructor.
     * @property {module:model/Bundle}
     */
    Bundle: Bundle,
    /**
     * The Cart model constructor.
     * @property {module:model/Cart}
     */
    Cart: Cart,
    /**
     * The CartRequest model constructor.
     * @property {module:model/CartRequest}
     */
    CartRequest: CartRequest,
    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category: Category,
    /**
     * The CategoryAggregated model constructor.
     * @property {module:model/CategoryAggregated}
     */
    CategoryAggregated: CategoryAggregated,
    /**
     * The City model constructor.
     * @property {module:model/City}
     */
    City: City,
    /**
     * The CityAggregated model constructor.
     * @property {module:model/CityAggregated}
     */
    CityAggregated: CityAggregated,
    /**
     * The CityRequest model constructor.
     * @property {module:model/CityRequest}
     */
    CityRequest: CityRequest,
    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment: Comment,
    /**
     * The ContentLanguage model constructor.
     * @property {module:model/ContentLanguage}
     */
    ContentLanguage: ContentLanguage,
    /**
     * The ContentManager model constructor.
     * @property {module:model/ContentManager}
     */
    ContentManager: ContentManager,
    /**
     * The Country model constructor.
     * @property {module:model/Country}
     */
    Country: Country,
    /**
     * The CountryRequest model constructor.
     * @property {module:model/CountryRequest}
     */
    CountryRequest: CountryRequest,
    /**
     * The Currency model constructor.
     * @property {module:model/Currency}
     */
    Currency: Currency,
    /**
     * The Customer model constructor.
     * @property {module:model/Customer}
     */
    Customer: Customer,
    /**
     * The CustomerRequest model constructor.
     * @property {module:model/CustomerRequest}
     */
    CustomerRequest: CustomerRequest,
    /**
     * The Deeplink model constructor.
     * @property {module:model/Deeplink}
     */
    Deeplink: Deeplink,
    /**
     * The Destination model constructor.
     * @property {module:model/Destination}
     */
    Destination: Destination,
    /**
     * The DestinationComment model constructor.
     * @property {module:model/DestinationComment}
     */
    DestinationComment: DestinationComment,
    /**
     * The DestinationCommentAuthor model constructor.
     * @property {module:model/DestinationCommentAuthor}
     */
    DestinationCommentAuthor: DestinationCommentAuthor,
    /**
     * The DestinationPhoto model constructor.
     * @property {module:model/DestinationPhoto}
     */
    DestinationPhoto: DestinationPhoto,
    /**
     * The EditorialCategory model constructor.
     * @property {module:model/EditorialCategory}
     */
    EditorialCategory: EditorialCategory,
    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event: Event,
    /**
     * The ExtendedField model constructor.
     * @property {module:model/ExtendedField}
     */
    ExtendedField: ExtendedField,
    /**
     * The FeedbackRequest model constructor.
     * @property {module:model/FeedbackRequest}
     */
    FeedbackRequest: FeedbackRequest,
    /**
     * The Flavour model constructor.
     * @property {module:model/Flavour}
     */
    Flavour: Flavour,
    /**
     * The FormError model constructor.
     * @property {module:model/FormError}
     */
    FormError: FormError,
    /**
     * The FormFieldError model constructor.
     * @property {module:model/FormFieldError}
     */
    FormFieldError: FormFieldError,
    /**
     * The GalleryMedia model constructor.
     * @property {module:model/GalleryMedia}
     */
    GalleryMedia: GalleryMedia,
    /**
     * The GenericEvent model constructor.
     * @property {module:model/GenericEvent}
     */
    GenericEvent: GenericEvent,
    /**
     * The GiftCard model constructor.
     * @property {module:model/GiftCard}
     */
    GiftCard: GiftCard,
    /**
     * The GiftCreationProductWithQuantity model constructor.
     * @property {module:model/GiftCreationProductWithQuantity}
     */
    GiftCreationProductWithQuantity: GiftCreationProductWithQuantity,
    /**
     * The GiftCreationRequest model constructor.
     * @property {module:model/GiftCreationRequest}
     */
    GiftCreationRequest: GiftCreationRequest,
    /**
     * The GiftRedeemRequest model constructor.
     * @property {module:model/GiftRedeemRequest}
     */
    GiftRedeemRequest: GiftRedeemRequest,
    /**
     * The GiftSchedule model constructor.
     * @property {module:model/GiftSchedule}
     */
    GiftSchedule: GiftSchedule,
    /**
     * The GiftScheduleFeature model constructor.
     * @property {module:model/GiftScheduleFeature}
     */
    GiftScheduleFeature: GiftScheduleFeature,
    /**
     * The GiftScheduleProduct model constructor.
     * @property {module:model/GiftScheduleProduct}
     */
    GiftScheduleProduct: GiftScheduleProduct,
    /**
     * The ListType model constructor.
     * @property {module:model/ListType}
     */
    ListType: ListType,
    /**
     * The ModelDate model constructor.
     * @property {module:model/ModelDate}
     */
    ModelDate: ModelDate,
    /**
     * The MusementList model constructor.
     * @property {module:model/MusementList}
     */
    MusementList: MusementList,
    /**
     * The MusementListGenericItem model constructor.
     * @property {module:model/MusementListGenericItem}
     */
    MusementListGenericItem: MusementListGenericItem,
    /**
     * The MusementListMusementItem model constructor.
     * @property {module:model/MusementListMusementItem}
     */
    MusementListMusementItem: MusementListMusementItem,
    /**
     * The MusementListThirdpartyItem model constructor.
     * @property {module:model/MusementListThirdpartyItem}
     */
    MusementListThirdpartyItem: MusementListThirdpartyItem,
    /**
     * The Order model constructor.
     * @property {module:model/Order}
     */
    Order: Order,
    /**
     * The Page model constructor.
     * @property {module:model/Page}
     */
    Page: Page,
    /**
     * The PassengerInfo model constructor.
     * @property {module:model/PassengerInfo}
     */
    PassengerInfo: PassengerInfo,
    /**
     * The PassengerInfoRequest model constructor.
     * @property {module:model/PassengerInfoRequest}
     */
    PassengerInfoRequest: PassengerInfoRequest,
    /**
     * The PaypalPaymentRequest model constructor.
     * @property {module:model/PaypalPaymentRequest}
     */
    PaypalPaymentRequest: PaypalPaymentRequest,
    /**
     * The PostClientToken model constructor.
     * @property {module:model/PostClientToken}
     */
    PostClientToken: PostClientToken,
    /**
     * The Price model constructor.
     * @property {module:model/Price}
     */
    Price: Price,
    /**
     * The Pricetag model constructor.
     * @property {module:model/Pricetag}
     */
    Pricetag: Pricetag,
    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product: Product,
    /**
     * The ProductRequest model constructor.
     * @property {module:model/ProductRequest}
     */
    ProductRequest: ProductRequest,
    /**
     * The PromoCode model constructor.
     * @property {module:model/PromoCode}
     */
    PromoCode: PromoCode,
    /**
     * The PurchaseExperience model constructor.
     * @property {module:model/PurchaseExperience}
     */
    PurchaseExperience: PurchaseExperience,
    /**
     * The RedirectTo3dSecureCardIssuer model constructor.
     * @property {module:model/RedirectTo3dSecureCardIssuer}
     */
    RedirectTo3dSecureCardIssuer: RedirectTo3dSecureCardIssuer,
    /**
     * The ResponseWithMessage model constructor.
     * @property {module:model/ResponseWithMessage}
     */
    ResponseWithMessage: ResponseWithMessage,
    /**
     * The Review model constructor.
     * @property {module:model/Review}
     */
    Review: Review,
    /**
     * The Schedule model constructor.
     * @property {module:model/Schedule}
     */
    Schedule: Schedule,
    /**
     * The ScheduleGroup model constructor.
     * @property {module:model/ScheduleGroup}
     */
    ScheduleGroup: ScheduleGroup,
    /**
     * The ScheduleProduct model constructor.
     * @property {module:model/ScheduleProduct}
     */
    ScheduleProduct: ScheduleProduct,
    /**
     * The ScheduleSlot model constructor.
     * @property {module:model/ScheduleSlot}
     */
    ScheduleSlot: ScheduleSlot,
    /**
     * The SearchResponse model constructor.
     * @property {module:model/SearchResponse}
     */
    SearchResponse: SearchResponse,
    /**
     * The SeatPrice model constructor.
     * @property {module:model/SeatPrice}
     */
    SeatPrice: SeatPrice,
    /**
     * The StripePaymentRequest model constructor.
     * @property {module:model/StripePaymentRequest}
     */
    StripePaymentRequest: StripePaymentRequest,
    /**
     * The SuccessfulPayment model constructor.
     * @property {module:model/SuccessfulPayment}
     */
    SuccessfulPayment: SuccessfulPayment,
    /**
     * The Supplier model constructor.
     * @property {module:model/Supplier}
     */
    Supplier: Supplier,
    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag: Tag,
    /**
     * The Ticket model constructor.
     * @property {module:model/Ticket}
     */
    Ticket: Ticket,
    /**
     * The TicketMetadata model constructor.
     * @property {module:model/TicketMetadata}
     */
    TicketMetadata: TicketMetadata,
    /**
     * The TicketMetadataRequest model constructor.
     * @property {module:model/TicketMetadataRequest}
     */
    TicketMetadataRequest: TicketMetadataRequest,
    /**
     * The TicketRequest model constructor.
     * @property {module:model/TicketRequest}
     */
    TicketRequest: TicketRequest,
    /**
     * The TranslatedMetadata model constructor.
     * @property {module:model/TranslatedMetadata}
     */
    TranslatedMetadata: TranslatedMetadata,
    /**
     * The Venue model constructor.
     * @property {module:model/Venue}
     */
    Venue: Venue,
    /**
     * The Vertical model constructor.
     * @property {module:model/Vertical}
     */
    Vertical: Vertical,
    /**
     * The VerticalAggregated model constructor.
     * @property {module:model/VerticalAggregated}
     */
    VerticalAggregated: VerticalAggregated,
    /**
     * The Wish model constructor.
     * @property {module:model/Wish}
     */
    Wish: Wish,
    /**
     * The APIProxyApi service constructor.
     * @property {module:api/APIProxyApi}
     */
    APIProxyApi: APIProxyApi,
    /**
     * The ActivityApi service constructor.
     * @property {module:api/ActivityApi}
     */
    ActivityApi: ActivityApi,
    /**
     * The ActivityTaxonomyApi service constructor.
     * @property {module:api/ActivityTaxonomyApi}
     */
    ActivityTaxonomyApi: ActivityTaxonomyApi,
    /**
     * The AutosuggestApi service constructor.
     * @property {module:api/AutosuggestApi}
     */
    AutosuggestApi: AutosuggestApi,
    /**
     * The BackgroundApi service constructor.
     * @property {module:api/BackgroundApi}
     */
    BackgroundApi: BackgroundApi,
    /**
     * The BlogpostApi service constructor.
     * @property {module:api/BlogpostApi}
     */
    BlogpostApi: BlogpostApi,
    /**
     * The BraintreeApi service constructor.
     * @property {module:api/BraintreeApi}
     */
    BraintreeApi: BraintreeApi,
    /**
     * The BundleApi service constructor.
     * @property {module:api/BundleApi}
     */
    BundleApi: BundleApi,
    /**
     * The CartApi service constructor.
     * @property {module:api/CartApi}
     */
    CartApi: CartApi,
    /**
     * The CartBundleApi service constructor.
     * @property {module:api/CartBundleApi}
     */
    CartBundleApi: CartBundleApi,
    /**
     * The CategoryApi service constructor.
     * @property {module:api/CategoryApi}
     */
    CategoryApi: CategoryApi,
    /**
     * The CityApi service constructor.
     * @property {module:api/CityApi}
     */
    CityApi: CityApi,
    /**
     * The CityVenueApi service constructor.
     * @property {module:api/CityVenueApi}
     */
    CityVenueApi: CityVenueApi,
    /**
     * The CommentApi service constructor.
     * @property {module:api/CommentApi}
     */
    CommentApi: CommentApi,
    /**
     * The CountryApi service constructor.
     * @property {module:api/CountryApi}
     */
    CountryApi: CountryApi,
    /**
     * The CurrenciesApi service constructor.
     * @property {module:api/CurrenciesApi}
     */
    CurrenciesApi: CurrenciesApi,
    /**
     * The DateApi service constructor.
     * @property {module:api/DateApi}
     */
    DateApi: DateApi,
    /**
     * The DeeplinkApi service constructor.
     * @property {module:api/DeeplinkApi}
     */
    DeeplinkApi: DeeplinkApi,
    /**
     * The DeprecatedApi service constructor.
     * @property {module:api/DeprecatedApi}
     */
    DeprecatedApi: DeprecatedApi,
    /**
     * The DestinationApi service constructor.
     * @property {module:api/DestinationApi}
     */
    DestinationApi: DestinationApi,
    /**
     * The EditorialCategoriesApi service constructor.
     * @property {module:api/EditorialCategoriesApi}
     */
    EditorialCategoriesApi: EditorialCategoriesApi,
    /**
     * The EditorialCategoryApi service constructor.
     * @property {module:api/EditorialCategoryApi}
     */
    EditorialCategoryApi: EditorialCategoryApi,
    /**
     * The EventApi service constructor.
     * @property {module:api/EventApi}
     */
    EventApi: EventApi,
    /**
     * The EventsApi service constructor.
     * @property {module:api/EventsApi}
     */
    EventsApi: EventsApi,
    /**
     * The FeaturesMetadataApi service constructor.
     * @property {module:api/FeaturesMetadataApi}
     */
    FeaturesMetadataApi: FeaturesMetadataApi,
    /**
     * The LanguageApi service constructor.
     * @property {module:api/LanguageApi}
     */
    LanguageApi: LanguageApi,
    /**
     * The ListApi service constructor.
     * @property {module:api/ListApi}
     */
    ListApi: ListApi,
    /**
     * The MediaApi service constructor.
     * @property {module:api/MediaApi}
     */
    MediaApi: MediaApi,
    /**
     * The OrderApi service constructor.
     * @property {module:api/OrderApi}
     */
    OrderApi: OrderApi,
    /**
     * The POITypesApi service constructor.
     * @property {module:api/POITypesApi}
     */
    POITypesApi: POITypesApi,
    /**
     * The PageApi service constructor.
     * @property {module:api/PageApi}
     */
    PageApi: PageApi,
    /**
     * The PaymentApi service constructor.
     * @property {module:api/PaymentApi}
     */
    PaymentApi: PaymentApi,
    /**
     * The PaypalApi service constructor.
     * @property {module:api/PaypalApi}
     */
    PaypalApi: PaypalApi,
    /**
     * The PricetagApi service constructor.
     * @property {module:api/PricetagApi}
     */
    PricetagApi: PricetagApi,
    /**
     * The PurchaseExperienceApi service constructor.
     * @property {module:api/PurchaseExperienceApi}
     */
    PurchaseExperienceApi: PurchaseExperienceApi,
    /**
     * The ReviewApi service constructor.
     * @property {module:api/ReviewApi}
     */
    ReviewApi: ReviewApi,
    /**
     * The SearchApi service constructor.
     * @property {module:api/SearchApi}
     */
    SearchApi: SearchApi,
    /**
     * The SecurityApi service constructor.
     * @property {module:api/SecurityApi}
     */
    SecurityApi: SecurityApi,
    /**
     * The ServicesMetadataApi service constructor.
     * @property {module:api/ServicesMetadataApi}
     */
    ServicesMetadataApi: ServicesMetadataApi,
    /**
     * The StripeApi service constructor.
     * @property {module:api/StripeApi}
     */
    StripeApi: StripeApi,
    /**
     * The VenueApi service constructor.
     * @property {module:api/VenueApi}
     */
    VenueApi: VenueApi,
    /**
     * The VerticalApi service constructor.
     * @property {module:api/VerticalApi}
     */
    VerticalApi: VerticalApi,
    /**
     * The WishlistApi service constructor.
     * @property {module:api/WishlistApi}
     */
    WishlistApi: WishlistApi
  };

  return exports;
}));
