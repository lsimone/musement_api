/**
 * Musement API
 * Musmement API
 *
 * OpenAPI spec version: 3.2.0
 * Contact: api-support@musement.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Bucket', 'model/Category', 'model/City', 'model/Flavour', 'model/Price', 'model/ReviewsAggregatedInfo', 'model/Tag', 'model/TranslatedMetadata', 'model/Vertical'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Bucket'), require('./Category'), require('./City'), require('./Flavour'), require('./Price'), require('./ReviewsAggregatedInfo'), require('./Tag'), require('./TranslatedMetadata'), require('./Vertical'));
  } else {
    // Browser globals (root is window)
    if (!root.MusementApi) {
      root.MusementApi = {};
    }
    root.MusementApi.Event = factory(root.MusementApi.ApiClient, root.MusementApi.Bucket, root.MusementApi.Category, root.MusementApi.City, root.MusementApi.Flavour, root.MusementApi.Price, root.MusementApi.ReviewsAggregatedInfo, root.MusementApi.Tag, root.MusementApi.TranslatedMetadata, root.MusementApi.Vertical);
  }
}(this, function(ApiClient, Bucket, Category, City, Flavour, Price, ReviewsAggregatedInfo, Tag, TranslatedMetadata, Vertical) {
  'use strict';




  /**
   * The Event model module.
   * @module model/Event
   * @version 3.2.0
   */

  /**
   * Constructs a new <code>Event</code>.
   * @alias module:model/Event
   * @class
   */
  var exports = function() {
    var _this = this;




































































  };

  /**
   * Constructs a <code>Event</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Event} obj Optional instance to populate.
   * @return {module:model/Event} The populated <code>Event</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('uuid')) {
        obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
      }
      if (data.hasOwnProperty('city')) {
        obj['city'] = City.constructFromObject(data['city']);
      }
      if (data.hasOwnProperty('saves')) {
        obj['saves'] = ApiClient.convertToType(data['saves'], 'Number');
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('relevance')) {
        obj['relevance'] = ApiClient.convertToType(data['relevance'], 'Number');
      }
      if (data.hasOwnProperty('relevance_venue')) {
        obj['relevance_venue'] = ApiClient.convertToType(data['relevance_venue'], 'Number');
      }
      if (data.hasOwnProperty('max_confirmation_time')) {
        obj['max_confirmation_time'] = ApiClient.convertToType(data['max_confirmation_time'], 'Number');
      }
      if (data.hasOwnProperty('must_see')) {
        obj['must_see'] = ApiClient.convertToType(data['must_see'], 'Boolean');
      }
      if (data.hasOwnProperty('last_chance')) {
        obj['last_chance'] = ApiClient.convertToType(data['last_chance'], 'Boolean');
      }
      if (data.hasOwnProperty('top_seller')) {
        obj['top_seller'] = ApiClient.convertToType(data['top_seller'], 'Boolean');
      }
      if (data.hasOwnProperty('print_voucher')) {
        obj['print_voucher'] = ApiClient.convertToType(data['print_voucher'], 'Boolean');
      }
      if (data.hasOwnProperty('temporary')) {
        obj['temporary'] = ApiClient.convertToType(data['temporary'], 'Boolean');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('about')) {
        obj['about'] = ApiClient.convertToType(data['about'], 'String');
      }
      if (data.hasOwnProperty('about_markdown')) {
        obj['about_markdown'] = ApiClient.convertToType(data['about_markdown'], 'String');
      }
      if (data.hasOwnProperty('about_html')) {
        obj['about_html'] = ApiClient.convertToType(data['about_html'], 'String');
      }
      if (data.hasOwnProperty('meeting_point')) {
        obj['meeting_point'] = ApiClient.convertToType(data['meeting_point'], 'String');
      }
      if (data.hasOwnProperty('opening_hours')) {
        obj['opening_hours'] = ApiClient.convertToType(data['opening_hours'], 'String');
      }
      if (data.hasOwnProperty('duration')) {
        obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
      }
      if (data.hasOwnProperty('validity')) {
        obj['validity'] = ApiClient.convertToType(data['validity'], 'String');
      }
      if (data.hasOwnProperty('numbered_seats')) {
        obj['numbered_seats'] = ApiClient.convertToType(data['numbered_seats'], 'Boolean');
      }
      if (data.hasOwnProperty('has_price_info_on_date')) {
        obj['has_price_info_on_date'] = ApiClient.convertToType(data['has_price_info_on_date'], 'Boolean');
      }
      if (data.hasOwnProperty('open')) {
        obj['open'] = ApiClient.convertToType(data['open'], 'Boolean');
      }
      if (data.hasOwnProperty('ticket_not_included')) {
        obj['ticket_not_included'] = ApiClient.convertToType(data['ticket_not_included'], 'Boolean');
      }
      if (data.hasOwnProperty('likely_to_sell_out')) {
        obj['likely_to_sell_out'] = ApiClient.convertToType(data['likely_to_sell_out'], 'Boolean');
      }
      if (data.hasOwnProperty('special_offer')) {
        obj['special_offer'] = ApiClient.convertToType(data['special_offer'], 'Boolean');
      }
      if (data.hasOwnProperty('exclusive')) {
        obj['exclusive'] = ApiClient.convertToType(data['exclusive'], 'Boolean');
      }
      if (data.hasOwnProperty('included_hotel_night_number')) {
        obj['included_hotel_night_number'] = ApiClient.convertToType(data['included_hotel_night_number'], 'Number');
      }
      if (data.hasOwnProperty('green_fee_days')) {
        obj['green_fee_days'] = ApiClient.convertToType(data['green_fee_days'], 'Number');
      }
      if (data.hasOwnProperty('daily')) {
        obj['daily'] = ApiClient.convertToType(data['daily'], 'Boolean');
      }
      if (data.hasOwnProperty('languages')) {
        obj['languages'] = ApiClient.convertToType(data['languages'], [TranslatedMetadata]);
      }
      if (data.hasOwnProperty('group_size')) {
        obj['group_size'] = ApiClient.convertToType(data['group_size'], ['String']);
      }
      if (data.hasOwnProperty('food')) {
        obj['food'] = ApiClient.convertToType(data['food'], [TranslatedMetadata]);
      }
      if (data.hasOwnProperty('services')) {
        obj['services'] = ApiClient.convertToType(data['services'], [TranslatedMetadata]);
      }
      if (data.hasOwnProperty('translated')) {
        obj['translated'] = ApiClient.convertToType(data['translated'], ['String']);
      }
      if (data.hasOwnProperty('features')) {
        obj['features'] = ApiClient.convertToType(data['features'], [TranslatedMetadata]);
      }
      if (data.hasOwnProperty('highlights')) {
        obj['highlights'] = ApiClient.convertToType(data['highlights'], ['String']);
      }
      if (data.hasOwnProperty('included')) {
        obj['included'] = ApiClient.convertToType(data['included'], ['String']);
      }
      if (data.hasOwnProperty('not_included')) {
        obj['not_included'] = ApiClient.convertToType(data['not_included'], ['String']);
      }
      if (data.hasOwnProperty('is_available_today')) {
        obj['is_available_today'] = ApiClient.convertToType(data['is_available_today'], 'Boolean');
      }
      if (data.hasOwnProperty('is_available_tomorrow')) {
        obj['is_available_tomorrow'] = ApiClient.convertToType(data['is_available_tomorrow'], 'Boolean');
      }
      if (data.hasOwnProperty('has_multiple_options')) {
        obj['has_multiple_options'] = ApiClient.convertToType(data['has_multiple_options'], 'Boolean');
      }
      if (data.hasOwnProperty('cover_image_url')) {
        obj['cover_image_url'] = ApiClient.convertToType(data['cover_image_url'], 'String');
      }
      if (data.hasOwnProperty('extra_media_url')) {
        obj['extra_media_url'] = ApiClient.convertToType(data['extra_media_url'], 'String');
      }
      if (data.hasOwnProperty('retail_price')) {
        obj['retail_price'] = Price.constructFromObject(data['retail_price']);
      }
      if (data.hasOwnProperty('net_price')) {
        obj['net_price'] = Price.constructFromObject(data['net_price']);
      }
      if (data.hasOwnProperty('bundled_price')) {
        obj['bundled_price'] = Price.constructFromObject(data['bundled_price']);
      }
      if (data.hasOwnProperty('discount')) {
        obj['discount'] = ApiClient.convertToType(data['discount'], 'Number');
      }
      if (data.hasOwnProperty('bucket')) {
        obj['bucket'] = Bucket.constructFromObject(data['bucket']);
      }
      if (data.hasOwnProperty('categories')) {
        obj['categories'] = ApiClient.convertToType(data['categories'], [Category]);
      }
      if (data.hasOwnProperty('reviews_number')) {
        obj['reviews_number'] = ApiClient.convertToType(data['reviews_number'], 'Number');
      }
      if (data.hasOwnProperty('reviews_avg')) {
        obj['reviews_avg'] = ApiClient.convertToType(data['reviews_avg'], 'Number');
      }
      if (data.hasOwnProperty('reviews_aggregated_info')) {
        obj['reviews_aggregated_info'] = ReviewsAggregatedInfo.constructFromObject(data['reviews_aggregated_info']);
      }
      if (data.hasOwnProperty('latitude')) {
        obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
      }
      if (data.hasOwnProperty('longitude')) {
        obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
      }
      if (data.hasOwnProperty('url')) {
        obj['url'] = ApiClient.convertToType(data['url'], 'String');
      }
      if (data.hasOwnProperty('agency_urls')) {
        obj['agency_urls'] = ApiClient.convertToType(data['agency_urls'], ['String']);
      }
      if (data.hasOwnProperty('agency_price')) {
        obj['agency_price'] = Price.constructFromObject(data['agency_price']);
      }
      if (data.hasOwnProperty('tags')) {
        obj['tags'] = ApiClient.convertToType(data['tags'], [Tag]);
      }
      if (data.hasOwnProperty('flavours')) {
        obj['flavours'] = ApiClient.convertToType(data['flavours'], [Flavour]);
      }
      if (data.hasOwnProperty('verticals')) {
        obj['verticals'] = ApiClient.convertToType(data['verticals'], [Vertical]);
      }
      if (data.hasOwnProperty('order_box_elements')) {
        obj['order_box_elements'] = ApiClient.convertToType(data['order_box_elements'], ['String']);
      }
      if (data.hasOwnProperty('giftable')) {
        obj['giftable'] = ApiClient.convertToType(data['giftable'], 'Boolean');
      }
      if (data.hasOwnProperty('has_passenger_info')) {
        obj['has_passenger_info'] = ApiClient.convertToType(data['has_passenger_info'], 'Boolean');
      }
      if (data.hasOwnProperty('has_extra_customer_data')) {
        obj['has_extra_customer_data'] = ApiClient.convertToType(data['has_extra_customer_data'], 'Boolean');
      }
      if (data.hasOwnProperty('buy_multiplier')) {
        obj['buy_multiplier'] = ApiClient.convertToType(data['buy_multiplier'], 'Number');
      }
      if (data.hasOwnProperty('realtimeCapable')) {
        obj['realtimeCapable'] = ApiClient.convertToType(data['realtimeCapable'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * Event unique identifier
   * @member {String} uuid
   */
  exports.prototype['uuid'] = undefined;
  /**
   * @member {module:model/City} city
   */
  exports.prototype['city'] = undefined;
  /**
   * Number of customer who saved this city as favorite
   * @member {Number} saves
   */
  exports.prototype['saves'] = undefined;
  /**
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * @member {Number} relevance
   */
  exports.prototype['relevance'] = undefined;
  /**
   * @member {Number} relevance_venue
   */
  exports.prototype['relevance_venue'] = undefined;
  /**
   * @member {Number} max_confirmation_time
   */
  exports.prototype['max_confirmation_time'] = undefined;
  /**
   * @member {Boolean} must_see
   */
  exports.prototype['must_see'] = undefined;
  /**
   * @member {Boolean} last_chance
   */
  exports.prototype['last_chance'] = undefined;
  /**
   * @member {Boolean} top_seller
   */
  exports.prototype['top_seller'] = undefined;
  /**
   * Voucher must be printed to access the activity
   * @member {Boolean} print_voucher
   */
  exports.prototype['print_voucher'] = undefined;
  /**
   * @member {Boolean} temporary
   */
  exports.prototype['temporary'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {String} about
   */
  exports.prototype['about'] = undefined;
  /**
   * @member {String} about_markdown
   */
  exports.prototype['about_markdown'] = undefined;
  /**
   * @member {String} about_html
   */
  exports.prototype['about_html'] = undefined;
  /**
   * @member {String} meeting_point
   */
  exports.prototype['meeting_point'] = undefined;
  /**
   * @member {String} opening_hours
   */
  exports.prototype['opening_hours'] = undefined;
  /**
   * @member {String} duration
   */
  exports.prototype['duration'] = undefined;
  /**
   * @member {String} validity
   */
  exports.prototype['validity'] = undefined;
  /**
   * @member {Boolean} numbered_seats
   */
  exports.prototype['numbered_seats'] = undefined;
  /**
   * If true the call GET /events/{id}/dates returns prices for each day.
   * @member {Boolean} has_price_info_on_date
   */
  exports.prototype['has_price_info_on_date'] = undefined;
  /**
   * Define if the Event is with open dates entrance (aka: Event::isOpenTicket).
   * @member {Boolean} open
   */
  exports.prototype['open'] = undefined;
  /**
   * @member {Boolean} ticket_not_included
   */
  exports.prototype['ticket_not_included'] = undefined;
  /**
   * @member {Boolean} likely_to_sell_out
   */
  exports.prototype['likely_to_sell_out'] = undefined;
  /**
   * @member {Boolean} special_offer
   */
  exports.prototype['special_offer'] = undefined;
  /**
   * @member {Boolean} exclusive
   */
  exports.prototype['exclusive'] = undefined;
  /**
   * @member {Number} included_hotel_night_number
   */
  exports.prototype['included_hotel_night_number'] = undefined;
  /**
   * @member {Number} green_fee_days
   */
  exports.prototype['green_fee_days'] = undefined;
  /**
   * Define if the Event is with \"daily tickets\" (aka: Event::getDailyTickets) This causes for example: to hide \"time block\" in Orderbox.
   * @member {Boolean} daily
   */
  exports.prototype['daily'] = undefined;
  /**
   * @member {Array.<module:model/TranslatedMetadata>} languages
   */
  exports.prototype['languages'] = undefined;
  /**
   * @member {Array.<String>} group_size
   */
  exports.prototype['group_size'] = undefined;
  /**
   * @member {Array.<module:model/TranslatedMetadata>} food
   */
  exports.prototype['food'] = undefined;
  /**
   * @member {Array.<module:model/TranslatedMetadata>} services
   */
  exports.prototype['services'] = undefined;
  /**
   * @member {Array.<String>} translated
   */
  exports.prototype['translated'] = undefined;
  /**
   * @member {Array.<module:model/TranslatedMetadata>} features
   */
  exports.prototype['features'] = undefined;
  /**
   * @member {Array.<String>} highlights
   */
  exports.prototype['highlights'] = undefined;
  /**
   * @member {Array.<String>} included
   */
  exports.prototype['included'] = undefined;
  /**
   * @member {Array.<String>} not_included
   */
  exports.prototype['not_included'] = undefined;
  /**
   * @member {Boolean} is_available_today
   */
  exports.prototype['is_available_today'] = undefined;
  /**
   * @member {Boolean} is_available_tomorrow
   */
  exports.prototype['is_available_tomorrow'] = undefined;
  /**
   * @member {Boolean} has_multiple_options
   */
  exports.prototype['has_multiple_options'] = undefined;
  /**
   * @member {String} cover_image_url
   */
  exports.prototype['cover_image_url'] = undefined;
  /**
   * @member {String} extra_media_url
   */
  exports.prototype['extra_media_url'] = undefined;
  /**
   * @member {module:model/Price} retail_price
   */
  exports.prototype['retail_price'] = undefined;
  /**
   * @member {module:model/Price} net_price
   */
  exports.prototype['net_price'] = undefined;
  /**
   * @member {module:model/Price} bundled_price
   */
  exports.prototype['bundled_price'] = undefined;
  /**
   * @member {Number} discount
   */
  exports.prototype['discount'] = undefined;
  /**
   * @member {module:model/Bucket} bucket
   */
  exports.prototype['bucket'] = undefined;
  /**
   * @member {Array.<module:model/Category>} categories
   */
  exports.prototype['categories'] = undefined;
  /**
   * @member {Number} reviews_number
   */
  exports.prototype['reviews_number'] = undefined;
  /**
   * @member {Number} reviews_avg
   */
  exports.prototype['reviews_avg'] = undefined;
  /**
   * @member {module:model/ReviewsAggregatedInfo} reviews_aggregated_info
   */
  exports.prototype['reviews_aggregated_info'] = undefined;
  /**
   * @member {Number} latitude
   */
  exports.prototype['latitude'] = undefined;
  /**
   * @member {Number} longitude
   */
  exports.prototype['longitude'] = undefined;
  /**
   * @member {String} url
   */
  exports.prototype['url'] = undefined;
  /**
   * @member {Array.<String>} agency_urls
   */
  exports.prototype['agency_urls'] = undefined;
  /**
   * @member {module:model/Price} agency_price
   */
  exports.prototype['agency_price'] = undefined;
  /**
   * @member {Array.<module:model/Tag>} tags
   */
  exports.prototype['tags'] = undefined;
  /**
   * @member {Array.<module:model/Flavour>} flavours
   */
  exports.prototype['flavours'] = undefined;
  /**
   * @member {Array.<module:model/Vertical>} verticals
   */
  exports.prototype['verticals'] = undefined;
  /**
   * @member {Array.<String>} order_box_elements
   */
  exports.prototype['order_box_elements'] = undefined;
  /**
   * @member {Boolean} giftable
   */
  exports.prototype['giftable'] = undefined;
  /**
   * @member {Boolean} has_passenger_info
   */
  exports.prototype['has_passenger_info'] = undefined;
  /**
   * @member {Boolean} has_extra_customer_data
   */
  exports.prototype['has_extra_customer_data'] = undefined;
  /**
   * @member {Number} buy_multiplier
   */
  exports.prototype['buy_multiplier'] = undefined;
  /**
   * Define if the Event is \"realtimeCapable\".
   * @member {Boolean} realtimeCapable
   */
  exports.prototype['realtimeCapable'] = undefined;



  return exports;
}));


